<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1" />
	<link rel="shortcut icon" href="#"/>
	<title>Document</title>

	<style>
	@import url(https://fonts.googleapis.com/earlyaccess/notosanstc.css);
	*{font-family:'Noto Sans TC','微軟正黑體';}
	*,*::before,*::after{margin:0px; padding:0px; -webkit-box-sizing:border-box; -moz-box-sizing:border-box; box-sizing:border-box;}
	.clearfix:after{content:''; display:block; height:0; clear:both; visibility:hidden;}
	hr{margin:20px 0px;}
	pre{border:2px solid deeppink; padding:5px; margin:2px; font-size:12px; background:rgba(255,255,255,0.7); clear:both; font-size:12px; font-family:'Source Code Pro'; tab-size:4; -moz-tab-size:4; white-space:pre-wrap;}
	pre strong{color:#CC0000;}
	pre em{font-style:normal; font-weight:bold; color:#006600;}
	button{ padding:5px 10px; }
	.gallery{ width:100%; max-width:1000px; padding:10px;  margin:0 auto;  border:2px solid #333;
	display:flex; flex-wrap:wrap; justify-content:space-between; align-content:flex-start;}

	.gallery .col_1{ width:300px; padding:10px;  margin-right:20px;   background:#ccc; }

	.gallery .col_2{ width:300px; padding:10px; background:#777; flex:1; }

	#myCanvas{box-shadow:0px 0px 5px 0px rgba(0,0,0,0.5);  }

	</style>
</head>
<body>

	<h1>記錄 復原 重作 undo redo</h1>

	<!--gallery 開始-->
		<div class="gallery">
			<!--col_1 開始-->
			<div class="col_1">
				<button class="btn_add">增加元件</button>
				<button class="btn_del">刪除元件</button>
				<button class="btn_undo" disabled>undo</button>
				<button class="btn_redo" disabled>redo</button>
			</div>
			<!--col_1 結束-->
	
			<!--col_2 開始-->
			<div class="col_2">
				<canvas id="myCanvas"></canvas>
			</div>
			<!--col_2 結束-->
		</div>
		<!--gallery 結束-->

	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/451/fabric.min.js"></script>

	
	<script>
	$(function(){
		let myFabric = new fabric.Canvas("myCanvas", {
			width:414, //寬高
			height:736, //寬高
			backgroundColor: "yellowgreen", // 背景色
		});

		//編輯框的樣式
		fabric.Object.prototype.set({
			//hasControls:false, //不能編輯
			//selectable:false,//是否被選取
			borderColor: "rgba(255,255,255,.7)", //編輯框色
			borderOpacityWhenMoving:.2, //編輯框 移動中 透明度
			borderScaleFactor:2, //編輯框寬
			borderDashArray: [10, 5], //編輯框虛線
			padding:10,//編輯框內距
			transparentCorners: false, //false 編輯把手才能填滿
			cornerColor:"#000",//編輯把手
			cornerStrokeColor: "#fff", // 控制點邊框色
			cornerSize:10, //編輯把手,
			//cornerStyle: "circle" //編輯把手 圓形
		});

		myFabric.preserveObjectStacking = true; //維持元件堆疊的順序 預設false選到的會浮上來

		
		var stateNow; //state當前
		var stateUndo = []; //state復原清單
		var stateRedo = []; //state重作清單
		
		
		//state 物件 新增 刪除 修改 要存檔
		function fnStateSave() {
			stateRedo = [];
			$(".btn_redo").prop("disabled", true);
			
			if (stateNow) {
				stateUndo.push(stateNow);
				$(".btn_undo").prop("disabled", false);
			}
			stateNow = JSON.stringify(myFabric);
		}

		//state 播放
		function fnStateReplay(playStack, saveStack, buttonsOn, buttonsOff) {
			//復原時：操作復原清單。 並把當前的寫到重作清單
			//重作時：操作重作清單。 把當前的寫到復原清單
			// playStack 要操作的清單
			// saveStack 存到哪單清單條
			// buttonsOn 按鈕有效
			// buttonsOff 按鈕無效
			saveStack.push(stateNow); //新增當前的
			stateNow = playStack.pop(); //刪除最後一個。並返回最後一個。

			var $btnOn = $(buttonsOn);
			var $btnOff = $(buttonsOff);
			$btnOn.prop("disabled", true);
			$btnOff.prop("disabled", true);

			myFabric.clear();

			myFabric.loadFromJSON(stateNow, function () {
				myFabric.renderAll();
				$btnOn.prop("disabled", false);
				if (playStack.length) {
					$btnOff.prop("disabled", false);
				}
			});
		}

		//復原
		$('.btn_undo').click(function () {
			fnStateReplay(stateUndo, stateRedo, '.btn_redo', this);
		});

		//重作
		$('.btn_redo').click(function () {
			fnStateReplay(stateRedo, stateUndo, '.btn_undo', this);
		})

		//初始
		fnStateSave();
		
					
		//修改
		myFabric.on("object:modified", e => {
			fnStateSave();
		});

							
		// 寫入一個按鈕
		$(".btn_add").click(function () {
			var myCycle = new fabric.Circle({
				fill: '#' + Math.floor(Math.random() * 16777215).toString(16),
				radius: Math.random() * 100,
				left: Math.random() * 250,
				top: Math.random() * 250
			});
			myFabric.add(myCycle);
			myFabric.renderAll();
			fnStateSave();
		});

		//刪除
		$(".btn_del").click(function(){
			let taList = myFabric.getActiveObjects();
			taList.forEach(item => {
				myFabric.remove(item);
			});
			myFabric.discardActiveObject();
			fnStateSave();
		});


	});
	</script>


	



	
</body>
</html>